name: Deploy to MonsterASP.NET

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

env:
  DOTNET_VERSION: '9.0.x'
  BUILD_CONFIGURATION: 'Release'
  PUBLISH_PATH: './publish'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore Tripmate.sln
      
    - name: Build solution
      run: dotnet build Tripmate.sln --configuration ${{ env.BUILD_CONFIGURATION }} --no-restore
      
    - name: Run tests
      run: dotnet test Tripmate.sln --configuration ${{ env.BUILD_CONFIGURATION }} --no-build --verbosity normal --collect:"XPlat Code Coverage"
      continue-on-error: true
      
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: '**/TestResults/**'
        
  publish:
    name: Publish Application
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Restore dependencies
      run: dotnet restore Tripmate.sln
      
    - name: Publish API
      run: dotnet publish src/Tripmate.API/Tripmate.API.csproj --configuration ${{ env.BUILD_CONFIGURATION }} --output ${{ env.PUBLISH_PATH }} --no-restore
      
    - name: List published files
      run: ls -la ${{ env.PUBLISH_PATH }}
      
    - name: Upload publish artifacts
      uses: actions/upload-artifact@v4
      with:
        name: published-app
        path: ${{ env.PUBLISH_PATH }}
        
  deploy:
    name: Deploy to MonsterASP.NET
    runs-on: ubuntu-latest
    needs: publish
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    environment:
      name: production
    
    steps:
    - name: Download published artifacts
      uses: actions/download-artifact@v4
      with:
        name: published-app
        path: ${{ env.PUBLISH_PATH }}
        
    - name: List files to deploy
      run: |
        echo "Files to be deployed:"
        ls -lah ${{ env.PUBLISH_PATH }}
        echo "Total size:"
        du -sh ${{ env.PUBLISH_PATH }}
        
    - name: Deploy to MonsterASP.NET via FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ${{ env.PUBLISH_PATH }}/
        server-dir: ./
        port: 21
        protocol: ftp
        log-level: verbose
        dangerous-clean-slate: false
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/*.pdb
          **/obj/**
          **/bin/**
          
    - name: Deployment Summary
      if: success()
      run: |
        echo "### ✅ Deployment Completed Successfully! 🚀" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment:** Production (MonsterASP.NET)" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Configuration:** ${{ env.BUILD_CONFIGURATION }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Time:** $(date)" >> $GITHUB_STEP_SUMMARY
        
    - name: Deployment Failed
      if: failure()
      run: |
        echo "### ❌ Deployment Failed!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Please check the logs above to identify the issue" >> $GITHUB_STEP_SUMMARY
